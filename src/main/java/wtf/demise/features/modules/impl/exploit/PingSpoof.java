package wtf.demise.features.modules.impl.exploit;

import wtf.demise.events.annotations.EventTarget;
import wtf.demise.events.impl.player.AttackEvent;
import wtf.demise.events.impl.player.UpdateEvent;
import wtf.demise.features.modules.Module;
import wtf.demise.features.modules.ModuleCategory;
import wtf.demise.features.modules.ModuleInfo;
import wtf.demise.features.values.impl.SliderValue;
import wtf.demise.utils.math.MathUtils;
import wtf.demise.utils.packet.PingSpoofComponent;

@ModuleInfo(name = "PingSpoof", category = ModuleCategory.Exploit)
public class PingSpoof extends Module {
    private final SliderValue minMs = new SliderValue("Min MS", 200, 0, 5000, 1, this);
    private final SliderValue maxMs = new SliderValue("Max MS", 200, 0, 2000, 1, this);

    @EventTarget
    public void onUpdate(UpdateEvent event) {
        int ms = (int) MathUtils.getAdvancedRandom(minMs.get(), maxMs.get());
        setTag(ms + "ms");
        boolean blinkIncoming = true;
        PingSpoofComponent.spoof(ms, blinkIncoming, blinkIncoming, blinkIncoming, blinkIncoming, blinkIncoming, true);

        if (mc.thePlayer.hurtTime > 0) {
            PingSpoofComponent.dispatch();
        }
    }

    @EventTarget
    public void onAttack(AttackEvent event) {
        event.setCancelled(false);
        PingSpoofComponent.dispatch();
    }
}
